@using DeviceDataCollector.Models
@using DeviceDataCollector.Controllers
@model PaginatedList<DonationsData>

@{
    ViewData["Title"] = "Donations";
}

<div class="container">
    <h1 class="mb-4">Donations</h1>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <div id="refreshStatus" class="text-muted small">
                <i class="bi bi-arrow-clockwise"></i> Auto-refreshing every 10 seconds | Last update: <span id="lastRefreshTime">@DateTime.Now.ToString("HH:mm:ss")</span>
            </div>
        </div>
        <div>
            <button id="manualRefresh" class="btn btn-sm btn-outline-primary">
                <i class="bi bi-arrow-clockwise"></i> Refresh Now
            </button>
            <div class="form-check form-switch d-inline-block ms-2">
                <input class="form-check-input" type="checkbox" id="autoRefreshToggle" checked>
                <label class="form-check-label" for="autoRefreshToggle">Auto-refresh</label>
            </div>
        </div>
    </div>

    <!-- Search and filter -->
    <div class="card mb-3">
        <div class="card-body">
            <form asp-action="Index" method="get" id="filterForm" class="row g-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search donation ID, device ID, operator..."
                               name="searchString" value="@ViewBag.CurrentFilter">
                        <button class="btn btn-primary" type="submit">Search</button>
                        <a asp-action="Index" asp-route-todayOnly="@ViewBag.TodayOnly" class="btn btn-outline-secondary">Clear</a>
                    </div>
                </div>
                <div class="col-md-6 text-end d-flex align-items-center justify-content-end">
                    <!-- Sorting button group -->
                    <div class="btn-group me-3" role="group">
                        <a asp-action="Index" asp-route-sortOrder="@ViewBag.TimestampSortParm"
                           asp-route-currentFilter="@ViewBag.CurrentFilter"
                           asp-route-todayOnly="@ViewBag.TodayOnly" class="btn btn-outline-secondary">
                            <i class="bi bi-clock"></i> Date
                        </a>
                        <a asp-action="Index" asp-route-sortOrder="@ViewBag.DeviceSortParm"
                           asp-route-currentFilter="@ViewBag.CurrentFilter"
                           asp-route-todayOnly="@ViewBag.TodayOnly" class="btn btn-outline-secondary">
                            <i class="bi bi-hdd"></i> Device
                        </a>
                        <a asp-action="Index" asp-route-sortOrder="@ViewBag.LipemicValueSortParm"
                           asp-route-currentFilter="@ViewBag.CurrentFilter"
                           asp-route-todayOnly="@ViewBag.TodayOnly" class="btn btn-outline-secondary">
                            <i class="bi bi-sort-numeric-down"></i> Value
                        </a>
                    </div>

                    <!-- Today Only toggle -->
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="todayOnlyToggle"
                        @(ViewBag.TodayOnly ? "checked" : "")>
                        <label class="form-check-label" for="todayOnlyToggle">Today Only</label>
                    </div>
                </div>

                <!-- Hidden inputs to maintain state -->
                <input type="hidden" name="sortOrder" value="@ViewBag.CurrentSort" />
                <input type="hidden" name="todayOnly" id="todayOnlyHidden" value="@ViewBag.TodayOnly.ToString().ToLower()" />
            </form>
        </div>
    </div>

    <!-- Main table card -->
    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Donations List</h5>
        </div>
        <div class="card-body p-0">
            <!-- Table container that will be refreshed by AJAX -->
            <div id="donationListContainer">
                <div class="table-responsive">
                    <table class="table table-striped table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>
                                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.DonationIdSortParm"
                                       asp-route-currentFilter="@ViewBag.CurrentFilter"
                                       asp-route-todayOnly="@(ViewBag.TodayOnly)" class="text-decoration-none text-dark">
                                        Donation ID
                                    </a>
                                </th>
                                <th>
                                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.DeviceSortParm"
                                       asp-route-currentFilter="@ViewBag.CurrentFilter"
                                       asp-route-todayOnly="@(ViewBag.TodayOnly)" class="text-decoration-none text-dark">
                                        Device
                                    </a>
                                </th>
                                <th>
                                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.TimestampSortParm"
                                       asp-route-currentFilter="@ViewBag.CurrentFilter"
                                       asp-route-todayOnly="@(ViewBag.TodayOnly)" class="text-decoration-none text-dark">
                                        Date/Time
                                    </a>
                                </th>
                                <th>
                                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.LipemicValueSortParm"
                                       asp-route-currentFilter="@ViewBag.CurrentFilter"
                                       asp-route-todayOnly="@(ViewBag.TodayOnly)" class="text-decoration-none text-dark">
                                        Lipemic Value
                                    </a>
                                </th>
                                <th>
                                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.LipemicGroupSortParm"
                                       asp-route-currentFilter="@ViewBag.CurrentFilter"
                                       asp-route-todayOnly="@(ViewBag.TodayOnly)" class="text-decoration-none text-dark">
                                        Lipemic Group
                                    </a>
                                </th>
                                <th>Status</th>
                                <th>Operator</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @(string.IsNullOrEmpty(item.DonationIdBarcode) ? "-" : item.DonationIdBarcode)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DeviceId)
                                    </td>
                                    <td>
                                        @item.Timestamp.ToString("dd.MM.yyyy HH:mm:ss")
                                    </td>
                                    <td>
                                        @(item.LipemicValue?.ToString() ?? "-")
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.LipemicGroup))
                                        {
                                            <span class="badge @(item.LipemicGroup == "I" ? "bg-success" :
                                                              item.LipemicGroup == "II" ? "bg-info" :
                                                              item.LipemicGroup == "III" ? "bg-warning" : "bg-danger")">
                                                @item.LipemicGroup
                                            </span>
                                        }
                                        else
                                        {
                                            <span>-</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.LipemicStatus))
                                        {
                                            @if (item.LipemicStatus == "PASSED")
                                            {
                                                <span class="badge bg-info">PASSED</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">LIPEMIC</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>-</span>
                                        }
                                    </td>
                                    <td>
                                        @(string.IsNullOrEmpty(item.OperatorIdBarcode) ? "-" : item.OperatorIdBarcode)
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">
                                                <i class="bi bi-info-circle"></i> Details
                                            </a>

                                            @if (User.IsInRole("Admin"))
                                            {
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">
                                                    <i class="bi bi-pencil"></i> Edit
                                                </a>
                                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">
                                                    <i class="bi bi-trash"></i> Delete
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @if (!Model.Any())
                {
                    <div class="alert alert-info m-3">
                        No donation data available. Connect devices to begin collecting data.
                    </div>
                }

            </div>
        </div>

        <!-- Pagination - outside of the refresh container -->
        <div class="card-footer">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <span>Page @Model.PageIndex of @Model.TotalPages</span>
                </div>
                <div>
                    <nav aria-label="Page navigation">
                        <ul class="pagination mb-0">
                            @if (Model.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a asp-action="Index"
                                       asp-route-sortOrder="@ViewBag.CurrentSort"
                                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                                       asp-route-currentFilter="@ViewBag.CurrentFilter"
                                       asp-route-todayOnly="@ViewBag.TodayOnly"
                                       class="page-link">
                                        Previous
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">Previous</span>
                                </li>
                            }

                            @for (int i = Math.Max(1, Model.PageIndex - 2); i <= Math.Min(Model.TotalPages, Model.PageIndex + 2); i++)
                            {
                                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                    <a asp-action="Index"
                                       asp-route-sortOrder="@ViewBag.CurrentSort"
                                       asp-route-pageNumber="@i"
                                       asp-route-currentFilter="@ViewBag.CurrentFilter"
                                       asp-route-todayOnly="@ViewBag.TodayOnly"
                                       class="page-link">
                                        @i
                                    </a>
                                </li>
                            }

                            @if (Model.HasNextPage)
                            {
                                <li class="page-item">
                                    <a asp-action="Index"
                                       asp-route-sortOrder="@ViewBag.CurrentSort"
                                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                                       asp-route-currentFilter="@ViewBag.CurrentFilter"
                                       asp-route-todayOnly="@ViewBag.TodayOnly"
                                       class="page-link">
                                        Next
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">Next</span>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-refresh functionality
        $(document).ready(function () {
            // Variables for auto-refresh
            const refreshInterval = 10 * 1000; // 10 seconds
            let autoRefreshTimer;
            let secondsCounter;
            let secondsLeft = refreshInterval / 1000;

            // Function to update donations list
            function refreshDonationsList() {
                $.ajax({
                    url: '@Url.Action("Index", "Donations")',
                    type: 'GET',
                    data: {
                        sortOrder: '@ViewBag.CurrentSort',
                        currentFilter: '@ViewBag.CurrentFilter',
                        pageNumber: '@Model.PageIndex',
                        todayOnly: $('#todayOnlyToggle').is(':checked')
                    },
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'  // Mark as AJAX request
                    },
                    success: function (result) {
                        // Replace the entire container content
                        $('#donationListContainer').html(result);
                        updateLastRefreshTime();
                    },
                    error: function (error) {
                        console.error("Error refreshing donation list:", error);
                        // Show an error alert in case of AJAX failure
                        $('#donationListContainer').append(
                            '<div class="alert alert-danger m-3">Error refreshing donation data. Please try again.</div>'
                        );
                    }
                });
            }

            // Function to update last refresh time
            function updateLastRefreshTime() {
                const now = new Date();
                const hours = String(now.getHours()).padStart(2, '0');
                const minutes = String(now.getMinutes()).padStart(2, '0');
                const seconds = String(now.getSeconds()).padStart(2, '0');
                $('#lastRefreshTime').text(`${hours}:${minutes}:${seconds}`);

                // Reset countdown
                secondsLeft = refreshInterval / 1000;
                updateRefreshStatus();
            }

            // Function to update refresh status text with countdown
            function updateRefreshStatus() {
                $('#refreshStatus').html(`<i class="bi bi-arrow-clockwise"></i> Auto-refreshing in ${secondsLeft} seconds | Last update: <span id="lastRefreshTime">${$('#lastRefreshTime').text()}</span>`);
            }

            // Start auto-refresh timer
            function startAutoRefresh() {
                // Clear any existing timers
                stopAutoRefresh();

                // Start new timer
                autoRefreshTimer = setInterval(refreshDonationsList, refreshInterval);

                // Start the countdown update
                secondsLeft = refreshInterval / 1000;
                secondsCounter = setInterval(function() {
                    secondsLeft--;
                    updateRefreshStatus();
                }, 1000);

                $('#autoRefreshToggle').prop('checked', true);
            }

            // Stop auto-refresh timer
            function stopAutoRefresh() {
                clearInterval(autoRefreshTimer);
                clearInterval(secondsCounter);
                $('#refreshStatus').html(`<i class="bi bi-clock-history"></i> Auto-refresh paused | Last update: <span id="lastRefreshTime">${$('#lastRefreshTime').text()}</span>`);
                $('#autoRefreshToggle').prop('checked', false);
            }

            // Initialize auto-refresh
            startAutoRefresh();

            // Handle manual refresh button
            $('#manualRefresh').click(function () {
                refreshDonationsList();
                // If auto-refresh is on, restart the timer
                if ($('#autoRefreshToggle').is(':checked')) {
                    startAutoRefresh();
                }
            });

            // Handle auto-refresh toggle
            $('#autoRefreshToggle').change(function () {
                if ($(this).is(':checked')) {
                    startAutoRefresh();
                } else {
                    stopAutoRefresh();
                }
            });

            // Handle today only toggle:
            $('#todayOnlyToggle').change(function() {
                // Update the hidden input with the current toggle state
                $('#todayOnlyHidden').val($(this).is(':checked'));

                // Submit the form to apply the filter
                $('#filterForm').submit();
            });
        });
    </script>
}