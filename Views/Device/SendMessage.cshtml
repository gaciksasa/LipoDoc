@{
    ViewData["Title"] = "Send Message to Device";
}

<div class="container">
    <h1 class="mb-4">Send Message to Device</h1>

    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Device Communication</h5>
                </div>
                <div class="alert alert-info m-2">
                    <small>
                        <i class="bi bi-info-circle"></i> Messages sent from this form are sent directly to the device and are <strong>not stored</strong> in the database.
                        <br>
                        <strong>Your app is listening on port 5000</strong>
                    </small>
                </div>
                <div class="card-body">
                    <form id="deviceMessageForm">
                        <div class="mb-3">
                            <label for="ipAddress" class="form-label">Device IP Address</label>
                            <input type="text" class="form-control" id="ipAddress" name="ipAddress" value="@ViewBag.DefaultTargetIP" required>
                        </div>

                        <div class="mb-3">
                            <label for="port" class="form-label">Port</label>
                            <input type="number" class="form-control" id="port" name="port" value="@ViewBag.DefaultPort" required>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">IP Address Presets</label>
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-sm btn-outline-secondary preset-btn" data-ip="127.0.0.3" data-port="5000">Hercules (127.0.0.3:5000)</button>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="message" class="form-label">Message</label>
                            <textarea class="form-control" id="message" name="message" rows="4" placeholder="Enter your message here" required></textarea>
                        </div>

                        <button type="submit" class="btn btn-primary w-100" id="sendButton">
                            <span class="spinner-border spinner-border-sm d-none" id="sendSpinner" role="status" aria-hidden="true"></span>
                            Send Message
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">Communication Log</h5>
                </div>
                <div class="card-body">
                    <div id="logContainer" style="height: 300px; overflow-y: auto; font-family: monospace; background-color: #f8f9fa; padding: 10px; border-radius: 5px;">
                        <div class="text-muted">Communication log will appear here...</div>
                    </div>
                </div>
                <div class="card-footer">
                    <button class="btn btn-outline-secondary btn-sm" id="clearLog">Clear Log</button>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-4">
        <a asp-controller="DeviceData" asp-action="Index" class="btn btn-outline-primary">View Collected Data</a>
        <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary ms-2">Back to Home</a>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize form submission
            $('#deviceMessageForm').on('submit', function(e) {
                e.preventDefault();

                // Show spinner
                $('#sendButton').attr('disabled', true);
                $('#sendSpinner').removeClass('d-none');

                // Get form data
                const ipAddress = $('#ipAddress').val();
                const port = $('#port').val();
                const message = $('#message').val();

                // Log the attempt
                logMessage('Sending', `Attempting to send message to ${ipAddress}:${port}`);
                logMessage('Message', message);

                // Send request
                $.ajax({
                    url: '@Url.Action("SendMessageToDevice", "Device")',
                    type: 'POST',
                    data: {
                        ipAddress: ipAddress,
                        port: port,
                        message: message
                    },
                    success: function(response) {
                        if (response.success) {
                            logMessage('Success', `Message sent successfully to ${ipAddress}:${port}`, 'success');

                            if (response.response) {
                                logMessage('Response', response.response, 'info');
                            } else {
                                logMessage('Info', 'No response received from device', 'info');
                            }
                        } else {
                            logMessage('Error', `Failed to send message to ${ipAddress}:${port}: ${response.response || 'Unknown error'}`, 'danger');
                        }
                    },
                    error: function(xhr, status, error) {
                        logMessage('Error', `Error: ${error}`, 'danger');
                    },
                    complete: function() {
                        // Hide spinner
                        $('#sendButton').attr('disabled', false);
                        $('#sendSpinner').addClass('d-none');
                    }
                });
            });

            // Clear log button
            $('#clearLog').on('click', function() {
                $('#logContainer').html('<div class="text-muted">Communication log will appear here...</div>');
            });

            // Preset buttons
            $('.preset-btn').on('click', function() {
                const ip = $(this).data('ip');
                const port = $(this).data('port');

                $('#ipAddress').val(ip);
                $('#port').val(port);

                logMessage('Info', `Preset selected: ${ip}:${port}`, 'info');
            });

            // Helper function to add log entries
            function logMessage(type, message, level = 'info') {
                const timestamp = new Date().toLocaleTimeString();
                const colorClass = level === 'info' ? 'text-info' :
                                level === 'success' ? 'text-success' :
                                level === 'danger' ? 'text-danger' : 'text-muted';

                const logEntry = `<div class="mb-1">
                    <span class="text-muted">[${timestamp}]</span>
                    <span class="${colorClass}"><strong>${type}:</strong></span>
                    ${message}
                </div>`;

                // Only keep the placeholder if it's the only child
                if ($('#logContainer .text-muted').length === 1 && $('#logContainer').children().length === 1) {
                    $('#logContainer').html(logEntry);
                } else {
                    $('#logContainer').append(logEntry);
                }

                // Scroll to bottom
                const logContainer = document.getElementById('logContainer');
                logContainer.scrollTop = logContainer.scrollHeight;
            }
        });
    </script>
}