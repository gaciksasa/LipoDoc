@{
    ViewData["Title"] = "Dashboard";
}

<div class="container">
    <div class="text-center mb-4">
        <h1 class="display-4">LipoDoc Data Collector</h1>
        <p class="lead">Centralized blood lipemic testing device management platform.</p>
    </div>

    <!-- Server Status Card -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Server Status</h5>
                </div>
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-lg-6">
                            <p><strong>Server is running at:</strong> @(Context.Request.Host.Host):@(Context.Request.Host.Port)</p>

                            <p>
                                <strong>Database:</strong>
                                @if (ViewBag.DatabaseConnected)
                                {
                                    <span class="text-success">@ViewBag.DatabaseStatus</span>
                                }
                                else
                                {
                                    <span class="text-danger">@ViewBag.DatabaseStatus</span>
                                    <div class="alert alert-warning mt-2">
                                        <i class="bi bi-exclamation-triangle"></i>
                                        Database connection issue detected. Please check your connection string in appsettings.json
                                        and make sure MySQL server is running.
                                    </div>
                                }
                            </p>
                        </div>
                        <div class="col-lg-6">
                            @if (ViewBag.DatabaseConnected)
                            {
                                <div class="row">
                                    <div class="col-6">
                                        <p>
                                            <strong>System Time:</strong><br>
                                            <span id="currentDateTime">@DateTime.Now.ToString("dd.MM.yyyy HH:mm:ss")</span>
                                        </p>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-warning">
                                    <i class="bi bi-database-x"></i> Database metrics unavailable - No connection
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (ViewBag.DatabaseConnected)
    {
        <!-- Metrics Cards -->
        <div class="row mb-4">
            <div class="col-lg-3 col-md-6 mb-4">
                <div class="card h-100">
                    <div class="card-body text-center">
                        <div class="display-4 text-primary">
                            <i class="bi bi-droplet-fill mb-3"></i>
                        </div>
                        <h3 class="card-title h5">Donations</h3>
                        <h2 class="display-5 mb-0">@ViewBag.DonationsCount</h2>
                        <p class="text-muted">Total lipemic tests</p>
                        <a asp-controller="Donations" asp-action="Index" class="stretched-link"></a>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6 mb-4">
                <div class="card h-100">
                    <div class="card-body text-center">
                        <div class="display-4 text-primary">
                            <i class="bi bi-hdd-network-fill mb-3"></i>
                        </div>
                        <h3 class="card-title h5">Devices</h3>
                        <h2 class="display-5 mb-0">@ViewBag.DevicesCount</h2>
                        <p class="text-muted">(@ViewBag.ActiveDevicesCount active)</p>
                        <a asp-controller="Devices" asp-action="Index" class="stretched-link"></a>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6 mb-4">
                <div class="card h-100">
                    <div class="card-body text-center">
                        <div class="display-4 text-primary">
                            <i class="bi bi-people-fill mb-3"></i>
                        </div>
                        <h3 class="card-title h5">Users</h3>
                        <h2 class="display-5 mb-0">@ViewBag.UsersCount</h2>
                        <p class="text-muted">System accounts</p>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-controller="Users" asp-action="Index" class="stretched-link"></a>
                        }
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6 mb-4">
                <div class="card h-100">
                    <div class="card-body text-center">
                        <div class="display-4 text-primary">
                            <i class="bi bi-clock-history mb-3"></i>
                        </div>
                        <h3 class="card-title h5">System Uptime</h3>
                        <h2 class="display-5 mb-0">@ViewBag.SystemUptime</h2>
                        <p class="text-muted">Since last restart</p>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Update current date/time
        function updateDateTime() {
            const now = new Date();
            const dateTimeStr = now.toLocaleString('en-GB', {
                day: '2-digit',
                month: '2-digit',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                hour12: false
            }).replace(',', '');

            document.getElementById('currentDateTime').innerText = dateTimeStr;
        }

        // Update record count
        function updateRecordCount() {
            fetch('/Donations/GetCount')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    document.getElementById('recordCount').innerText = data;
                })
                .catch(error => {
                    console.error('Error fetching record count:', error);
                    document.getElementById('recordCount').innerText = 'Error loading count';
                });
        }

        // Initialize and set intervals
        updateDateTime();
        updateRecordCount();

        // Update time every second
        setInterval(updateDateTime, 1000);

        // Update donations count every 5 seconds
        setInterval(updateRecordCount, 5000);
    </script>
}