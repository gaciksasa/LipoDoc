// <auto-generated />
using System;
using DeviceDataCollector.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeviceDataCollector.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250428075019_AddExportedFieldToDonationsOnly")]
    partial class AddExportedFieldToDonationsOnly
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DeviceDataCollector.Models.CurrentDeviceStatus", b =>
                {
                    b.Property<string>("DeviceId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AvailableData")
                        .HasColumnType("int");

                    b.Property<string>("CheckSum")
                        .HasColumnType("longtext");

                    b.Property<string>("IPAddress")
                        .HasColumnType("longtext");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusUpdateCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("DeviceId");

                    b.ToTable("CurrentDeviceStatuses");
                });

            modelBuilder.Entity("DeviceDataCollector.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastConnectionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("DeviceDataCollector.Models.DeviceSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BarcodesJson")
                        .HasColumnType("longtext");

                    b.Property<bool>("BarcodesMode")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceIpAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("HardwareVersion")
                        .HasColumnType("longtext");

                    b.Property<int>("LipemicIndex1")
                        .HasColumnType("int");

                    b.Property<int>("LipemicIndex2")
                        .HasColumnType("int");

                    b.Property<int>("LipemicIndex3")
                        .HasColumnType("int");

                    b.Property<int>("LocalPort")
                        .HasColumnType("int");

                    b.Property<bool>("LotNumberEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NetworkName")
                        .HasColumnType("longtext");

                    b.Property<bool>("OperatorIdEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ProfilesJson")
                        .HasColumnType("longtext");

                    b.Property<string>("RawResponse")
                        .HasColumnType("longtext");

                    b.Property<int>("RemotePort")
                        .HasColumnType("int");

                    b.Property<string>("SecurityType")
                        .HasColumnType("longtext");

                    b.Property<string>("ServerAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("SoftwareVersion")
                        .HasColumnType("longtext");

                    b.Property<string>("SubnetMask")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("TransferMode")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("WifiMode")
                        .HasColumnType("longtext");

                    b.Property<string>("WifiPassword")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DeviceSetups");
                });

            modelBuilder.Entity("DeviceDataCollector.Models.DeviceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableData")
                        .HasColumnType("int");

                    b.Property<string>("CheckSum")
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DeviceTimestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("longtext");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("RawPayload")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("Timestamp");

                    b.ToTable("DeviceStatuses");
                });

            modelBuilder.Entity("DeviceDataCollector.Models.DonationsData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AvailableData")
                        .HasColumnType("int");

                    b.Property<string>("CheckSum")
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("DeviceStatus")
                        .HasColumnType("int");

                    b.Property<string>("DonationIdBarcode")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Exported")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsBarcodeMode")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LipemicGroup")
                        .HasColumnType("longtext");

                    b.Property<string>("LipemicStatus")
                        .HasColumnType("longtext");

                    b.Property<int?>("LipemicValue")
                        .HasColumnType("int");

                    b.Property<string>("LotNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OperatorIdBarcode")
                        .HasColumnType("longtext");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("RawPayload")
                        .HasColumnType("longtext");

                    b.Property<string>("RefCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("DonationIdBarcode");

                    b.HasIndex("Timestamp");

                    b.ToTable("DonationsData");
                });

            modelBuilder.Entity("DeviceDataCollector.Models.SystemNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Read")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RelatedEntityId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SystemNotifications");
                });

            modelBuilder.Entity("DeviceDataCollector.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 28, 9, 50, 17, 672, DateTimeKind.Local).AddTicks(948),
                            Email = "admin@blooddonation.org",
                            FullName = "Administrator",
                            PasswordHash = "$2a$11$.OlMbeYO784ErRx0tvC7D.7e6BuUIgBsHw/Bgh9hrl9sPs3oNxG22",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 28, 9, 50, 17, 862, DateTimeKind.Local).AddTicks(4303),
                            Email = "user@blooddonation.org",
                            FullName = "Regular User",
                            PasswordHash = "$2a$11$823kzwuxyfRcurn2Ldow7uAj.oe2tIKgTq0w4/V0O37aTxHofe3X6",
                            Role = "User",
                            Username = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
